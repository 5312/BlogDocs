import{_ as n,p as s,q as a,a1 as p}from"./framework-2c66b6ab.js";const t="/BlogDocs/images/数组.png",o="/BlogDocs/images/数组操作.png",e={},c=p('<h1 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h1><p><img src="'+t+`" alt="数组"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//数组; 一种数据结构,可以存储多个值,可以理解为一个大的容器.</span>
	<span class="token comment">//数组的特点:存储数据的空间连续且有序.</span>
	<span class="token comment">//数组的元素:在数组中存放的值,称为数组的元素.</span>
	<span class="token comment">//数组元素的索引(下标);是对数组元素的顺序标记.索引从零开始,</span>
	<span class="token comment">//递增加一</span>
	<span class="token comment">//数组的长度:就是数组中元素的个数</span>
	<span class="token comment">//JS中的数组特点:数组元素的数据类型没有要求,存什么都可以.</span>
	<span class="token comment">//</span>
	<span class="token comment">//1.如何创建数组</span>
	<span class="token comment">//1 . 字面量创建</span>
	<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//创建了一个名为arr的空数组</span>
	
	<span class="token comment">//从数组中取出元素的值:通过去索引的方式</span>
	<span class="token keyword">var</span> s1 <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token comment">//对数组的操作要注意,防止数组越界 (通过索引来访问数组元素时,索引不要超过最大值:索引最大值就是数组长度-1)</span>
	<span class="token comment">//如果越界 了虽然不报错,但是会得到undefined </span>
	
	<span class="token comment">//向数组中添加元素</span>
	arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;王辉&#39;</span><span class="token punctuation">;</span>
	<span class="token comment">//通过索引向数组中添加元素,一定要按顺序添加剂,不要跳跃添加,不然中间会出现多个undefined占位.</span>
	<span class="token comment">//</span>
	<span class="token comment">//例如:生成10 个1-100之间的随机数,并且一次性输出他们.</span>
	<span class="token comment">//</span>
	<span class="token comment">//</span>
	<span class="token comment">//创建一个空数组,用来存储循环过程中生成的随机数</span>
	<span class="token keyword">var</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i  <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">10</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">var</span> n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> n<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//通过 class或者标签名tag 来获取元素(得到的是元素集合)</span>
<span class="token comment">//var divs = document.getElementsByClassName(&#39;div&#39;);</span>
<span class="token comment">//</span>
<span class="token keyword">var</span> divs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>divs<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//依次访问数组中元素的行为称为数组遍历</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> divs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> r <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        g <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    divs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&#39;rgb(&#39;</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">&#39;, &#39;</span> <span class="token operator">+</span> g <span class="token operator">+</span> <span class="token string">&#39;, &#39;</span> <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>



<span class="token comment">//. 后 如果名字追加了()就是方法,没有就是属性</span>
<span class="token comment">//获取数组长度:length</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>divs<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组操作" tabindex="-1"><a class="header-anchor" href="#数组操作" aria-hidden="true">#</a> 数组操作</h3><p><img src="`+o+`" alt="数组操作"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>	<span class="token keyword">var</span> arr<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;草莓&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香蕉&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;西瓜&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;橘子&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;橙子&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;桃子&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;百香果&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment">//数组常用的操作方法(添加,修改,删除,查询)</span>
	<span class="token comment">//1. 添加</span>
	<span class="token comment">//push():向指定数组的末尾添加一个或多个元素</span>
	arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;苹果&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;哈密瓜&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//unshift():向指定数组的开头添加一个或多个元素</span>
	arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;true&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//splice();对指定数组进行添加,修改,删除操作.</span>
	<span class="token comment">//参数情况:</span>
	<span class="token comment">//参数一:必须元素,表示要操作的索引</span>
	<span class="token comment">//参数二:必须元素,表示要操作的长度</span>
	<span class="token comment">//参数三;要操作的结果内容</span>
	<span class="token comment">//</span>
	arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;liulan&#39;</span><span class="token punctuation">)</span>

	<span class="token comment">//删除</span>
	<span class="token comment">//pop():删除指定数组末尾的元素,此方法没有参数,使用一次只能删除一个元素.</span>
	arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//shift()删除指定数组开头的元素,同样没有参数,使用一次只能删除一个元素.</span>
	
	<span class="token comment">//splice()</span>
	arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//修改</span>
	<span class="token comment">//splice()</span>
	arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;蓝莓&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//三个变一个</span>

	<span class="token comment">//数组截取</span>
	<span class="token comment">//slice:从指定数组中获取指定位子的元素并装入新数组返回</span>
	<span class="token comment">/*
		参数一:表示截取的开始位置
		参数二:可选参数,表示截取的结束位置 (不包含结束位子上的元素),如果没有写结束位置,那么默认从开始位置截取到数组结束.
	 */</span>
	<span class="token keyword">var</span> newArr <span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//数组拼接</span>
	<span class="token comment">//concat():数组拼接</span>
	<span class="token keyword">var</span> newArr1 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		newArr2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> newArr<span class="token operator">=</span>	newArr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>newArr2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span>

	<span class="token comment">//判断指定值是否为数组元素</span>
	<span class="token comment">//indexOf:判断指定值是否为指定数组的元素,如果是返回元素索引,如果不是返回 -1.</span>
	
	<span class="token keyword">var</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;西瓜&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//数组转换成字符串</span>
	<span class="token comment">//join():将数组转化成字符串</span>
	<span class="token keyword">var</span> str <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//数组元素反转</span>
	<span class="token comment">//reverse():将数组元素反转,返回一个翻转后的新数组</span>
	<span class="token keyword">var</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习-随机数组" tabindex="-1"><a class="header-anchor" href="#练习-随机数组" aria-hidden="true">#</a> 练习_随机数组</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//随机数之和</span>
<span class="token keyword">var</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//创建数组</span>
<span class="token keyword">var</span> max <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> min <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">30</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//每一个随机数放入数组中</span>
    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">&#39;&lt;br /&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    n <span class="token operator">+=</span> a<span class="token punctuation">;</span> <span class="token comment">//求和</span>

    <span class="token comment">//求最大值</span>
    <span class="token comment">//如果数组中的元素比假设的最大值还要大,那么久更新变量max的值,</span>
    <span class="token comment">//来记录当前的最大值</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>max <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        max <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//求最小值</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>min <span class="token operator">&gt;</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    	min <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;最大值为&#39;</span> <span class="token operator">+</span> max <span class="token operator">+</span> <span class="token string">&#39;&lt;br /&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;最小值为&#39;</span> <span class="token operator">+</span> min <span class="token operator">+</span> <span class="token string">&#39;&lt;br /&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;和&#39;</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">&#39;&lt;br /&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">//假设法</span>
    <span class="token comment">//1.咋知道取值范围的时候,通过假设下限为最大值来进行比较比较,</span>
    <span class="token comment">//假设上限为最小值来进行比价.</span>
    <span class="token comment">//</span>
    <span class="token comment">//2. 假设数组中的第一个元素时最值来进行最值的比较</span>
    <span class="token keyword">var</span> max <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>min <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    	<span class="token keyword">if</span><span class="token punctuation">(</span>max<span class="token operator">&lt;</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    		max <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    	<span class="token punctuation">}</span>
    	<span class="token keyword">if</span><span class="token punctuation">(</span>min <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    		min <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    	<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二维数组" tabindex="-1"><a class="header-anchor" href="#二维数组" aria-hidden="true">#</a> 二维数组</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//二维数组</span>
<span class="token comment">//例如: 对班里的人进行随机分组,每组4人,到最后剩下不足4人,这些人一组.</span>
<span class="token keyword">var</span> people <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;张凯斌&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张辉&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;顾文江&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;侯博洋&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;侯玉忠&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李泽坤&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马茜&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;王娇&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;黄玉芮&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;段圆圆&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马锐&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李莹&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李涛&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;吴红霞&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;王莎莎&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;赵康&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;周登华&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;周叶凡&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李杰&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;余学武&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;赵璘&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李骞&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;杜洁&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;马鹏飞&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李锦涛&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;汉宁辉&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//共能分几组</span>
<span class="token keyword">var</span> groupNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>people<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//用来存储分好的组</span>
<span class="token keyword">var</span> groups <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> groupNum<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">var</span> group <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//开始第一组分组</span>
        <span class="token keyword">var</span> person <span class="token operator">=</span> people<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>people<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        group<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//把随机到的人从名单数组中删除,防止重复</span>
        <span class="token comment">//获取随机人在people中的下标</span>
        <span class="token keyword">var</span> index <span class="token operator">=</span> people<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//把index位置的元素people中删除</span>
        people<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//如果当前组人数到达4人那么结束本次分组</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>group<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">||</span> people<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//把分好的组存起来</span>
    groups<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//所有分组工作,控制台打印</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groups<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取要操作的元素,并绑定点击事件</span>
<span class="token keyword">var</span> inps <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> ms <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span>

inps<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//1 . 获取输入内容</span>
    <span class="token keyword">var</span> pName <span class="token operator">=</span> inps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token comment">//2 . 从分组中找到当前名字所在的组,并把组内成员在&lt;h1&gt;标签中显示</span>
    <span class="token comment">//获取 输入的内容在 groups中的下标</span>
<span class="token comment">//思路一:将分好组的每一个名字与输入的名字进行比较</span>
<span class="token comment">//</span>
<span class="token comment">//</span>

 <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>groups<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

 	<span class="token keyword">var</span> g <span class="token operator">=</span> groups<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//1:先从groups中挨个将组取出来 </span>
    <span class="token keyword">var</span> lN <span class="token operator">=</span> gLders<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//取组长的组</span>
 	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>g<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 		<span class="token keyword">var</span> nName <span class="token operator">=</span> g<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//2:在从组中挨个将名字取出来</span>
 		<span class="token keyword">if</span><span class="token punctuation">(</span>pName <span class="token operator">==</span> nName<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//将取出来的名字与输入的名字进行比较,如果相等,那么输入名字所在的组就是g</span>
 			document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> g<span class="token punctuation">;</span>
 		<span class="token punctuation">}</span>
 	<span class="token punctuation">}</span>
 <span class="token punctuation">}</span>

<span class="token comment">//思路简化</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> groups<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//找7个组</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> groups<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//找人</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span> pName <span class="token operator">==</span> groups<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            	ms<span class="token punctuation">.</span>innerText <span class="token operator">=</span> groups<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//思路2 ; 通过数组提供的indexOf()方法来快速判断输入名字是否在组中</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>groups<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">var</span> g <span class="token operator">=</span> groups<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>pName<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> g<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),l=[c];function i(u,k){return s(),a("div",null,l)}const d=n(e,[["render",i],["__file","数组.html.vue"]]);export{d as default};
