import{_ as n,p as s,q as a,a1 as t}from"./framework-2c66b6ab.js";const p={},e=t(`<h2 id="不基于-body-加载-raycaster-射线拾取对象出现误差问题" tabindex="-1"><a class="header-anchor" href="#不基于-body-加载-raycaster-射线拾取对象出现误差问题" aria-hidden="true">#</a> 不基于 body 加载，Raycaster 射线拾取对象出现误差问题</h2><blockquote><p>浏览器中浏览 3D 图形的时候，想要与 3D 图形之间做一些点击事件和交互操作，比较常用的一个解决方案就是使用 Raycaster 对象来实现（射线拾取）。 three.js 利用射线 Raycaster 进行碰撞检测获取射线穿透对象。</p></blockquote><p><strong>常用方法</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> 事件对象 <span class="token punctuation">}</span></span> <span class="token parameter">event</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> 场景对象 <span class="token punctuation">}</span></span> <span class="token parameter">scene</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> 镜头对象 <span class="token punctuation">}</span></span> <span class="token parameter">camera</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">getCanvasIntersects</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 声明 raycaster 和 mouse 变量</span>
  <span class="token keyword">let</span> rayCaster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Raycaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> mouse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>touches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mouse<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pageX <span class="token operator">/</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    mouse<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pageY <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 通过鼠标点击位置,计算出 raycaster 所需点的位置,以屏幕为中心点,范围 -1 到 1</span>
    mouse<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientX <span class="token operator">/</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    mouse<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientY <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//通过鼠标点击的位置(二维坐标)和当前相机的矩阵计算出射线位置</span>
  rayCaster<span class="token punctuation">.</span><span class="token function">setFromCamera</span><span class="token punctuation">(</span>mouse<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 返回射线选中的对象 第二个参数如果不填 默认是false</span>
  <span class="token keyword">let</span> intersects <span class="token operator">=</span> rayCaster<span class="token punctuation">.</span><span class="token function">intersectObjects</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//返回选中的对象数组</span>
  <span class="token keyword">return</span> intersects<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//- 点击事件 获取某一个盒子canvas中模型对象</span>
<span class="token keyword">function</span> <span class="token function">getBoxClickObjFn</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera<span class="token punctuation">,</span> canvas</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> intsersects <span class="token operator">=</span> <span class="token function">getCanvasIntersects1</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera<span class="token punctuation">,</span> canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>intsersects<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> intsersects<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>但当绘制 3D 模型的 canvas 基于某一个 DOM 节点（或者说 canvas 不是基于 body 绘制），未填充整个屏幕，此时通过上面的方法会出现鼠标点中网格模型位置却获取不到网格模型对象（网格模型对象较小发现问题更容易），点击周围可能会取到网格对象模型。 结论：上面的方法只针对于 3D 模型加载 canvas 填充整个屏幕时有效，不针对于基于 DOM 节点加载 3D 模型对象情况。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> 事件对象 <span class="token punctuation">}</span></span> <span class="token parameter">event</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> 场景对象 <span class="token punctuation">}</span></span> <span class="token parameter">scene</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span> 镜头对象 <span class="token punctuation">}</span></span> <span class="token parameter">camera</span>
 * <span class="token keyword">@param</span> <span class="token parameter">canvas</span> 绘制盒子
 * 当canvas不占满整屏时射线拾取存在偏差，获取点击对象
 */</span>
<span class="token keyword">function</span> <span class="token function">getCanvasIntersects</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera<span class="token punctuation">,</span> canvas</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 获取元素的大小及其相对于视口的位置</span>
  <span class="token keyword">let</span> getBoundingClientRect <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 屏幕坐标转标准设备坐标</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientX <span class="token operator">-</span> getBoundingClientRect<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">/</span> canvas<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 标准设备横坐标</span>
  <span class="token keyword">let</span> y <span class="token operator">=</span>
    <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientY <span class="token operator">-</span> getBoundingClientRect<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">/</span> canvas<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span>
    <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 标准设备纵坐标</span>

  <span class="token keyword">let</span> vector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 标准设备坐标</span>
  <span class="token comment">// 标准设备坐标转世界坐标</span>
  <span class="token keyword">let</span> worldVector <span class="token operator">=</span> vector<span class="token punctuation">.</span><span class="token function">unproject</span><span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 射线投射方向单位向量(worldVector坐标减相机位置坐标)</span>
  <span class="token keyword">let</span> ray <span class="token operator">=</span> worldVector<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 创建射线投射器对象</span>
  <span class="token keyword">let</span> rayCaster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Raycaster</span><span class="token punctuation">(</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">,</span> ray<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 返回射线选中的对象 第二个参数如果不填 默认是false</span>
  <span class="token keyword">let</span> intersects <span class="token operator">=</span> rayCaster<span class="token punctuation">.</span><span class="token function">intersectObjects</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//返回选中的对象数组</span>
  <span class="token keyword">return</span> intersects<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//- 点击事件 获取某一个盒子canvas中模型对象</span>
<span class="token keyword">function</span> <span class="token function">getBoxClickObjFn</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera<span class="token punctuation">,</span> canvas</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> intsersects <span class="token operator">=</span> <span class="token function">getCanvasIntersects1</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera<span class="token punctuation">,</span> canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>intsersects<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> intsersects<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[e];function o(l,u){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","射线检测.html.vue"]]);export{k as default};
