import{_ as i,M as c,p as n,q as t,R as e,t as o,N as d,a1 as r}from"./framework-2c66b6ab.js";const a={},s=e("h2",{id:"前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),o(" 前言")],-1),h=e("p",null,"最近公司项目停滞，已经好几个月没有动了，所以开始准备面试，没有任何准备的去面了几次发现好多问题回答不上来，遂决定整理一份面试计划，以及面试遇到的问题~",-1),p={href:"https://5312.vercel.app/",target:"_blank",rel:"noopener noreferrer"},_=e("br",null,null,-1),u={href:"https://juejin.cn/post/7061588533214969892#heading-24",target:"_blank",rel:"noopener noreferrer"},b=e("br",null,null,-1),f={href:"https://juejin.cn/post/7073869980411887652#heading-3",target:"_blank",rel:"noopener noreferrer"},g=e("h2",{id:"一、简历",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、简历","aria-hidden":"true"},"#"),o(" 一、简历")],-1),m=e("p",null,"简历在找工作过程中是非常非常重要的，无论你是什么途径去面试的，面试你的人一定会看你的简历。",-1),F=e("p",null,"可以参考以下文章，讲的非常清楚，就不再赘述",-1),C=e("br",null,null,-1),x={href:"https://link.juejin.cn/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fpy_HLqOjNdL4l0CZHjMwqw",title:"https://mp.weixin.qq.com/s/py_HLqOjNdL4l0CZHjMwqw",target:"_blank",rel:"noopener noreferrer"},k=e("br",null,null,-1),w={href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F23150301%2Fanswer%2F1229870117",title:"https://www.zhihu.com/question/23150301/answer/1229870117",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/youngyangyang04/Markdown-Resume-Template",target:"_blank",rel:"noopener noreferrer"},S=r('<h2 id="二、html-css-面试题" tabindex="-1"><a class="header-anchor" href="#二、html-css-面试题" aria-hidden="true">#</a> 二、HTML+CSS 面试题</h2><p>这部分是基础中的基础！！</p><h3 id="_1、html-面试题" tabindex="-1"><a class="header-anchor" href="#_1、html-面试题" aria-hidden="true">#</a> 1、HTML 面试题</h3><p>以下是针对HTML的部分，不过最近面试，好像没被问过。</p><h4 id="_1-1-如何理解-html-语义化" tabindex="-1"><a class="header-anchor" href="#_1-1-如何理解-html-语义化" aria-hidden="true">#</a> 1.1 如何理解 HTML 语义化？</h4><ul><li>让人更容易读懂（增加代码可读性）。</li><li>让搜索引擎更容易读懂，有助于爬虫抓取更多的有效信息，爬虫依赖于标签来确定上下文和各个关键字的权重（SEO）。</li><li>在没有 CSS 样式下，页面也能呈现出很好地内容结构、代码结构。</li></ul><h4 id="_1-2-从浏览器地址栏输入-url-到请求返回发生了什么" tabindex="-1"><a class="header-anchor" href="#_1-2-从浏览器地址栏输入-url-到请求返回发生了什么" aria-hidden="true">#</a> 1.2 从浏览器地址栏输入 url 到请求返回发生了什么</h4><blockquote><p>URL（Uniform Resource Locator），统一资源定位符，用于定位互联网上资源，俗称网址。</p></blockquote><ol><li>输入 URL 后解析出协议、主机、端口、路径等信息，并构造一个 HTTP 请求。</li></ol><ul><li>强缓存.</li><li>协商缓存.</li></ul><ol start="2"><li>DNS解析</li><li>TCP 链接</li><li>HTTP请求。</li><li>服务器处理请求并返回报文。</li><li>浏览器渲染页面。</li><li>断开TCP链接。</li></ol><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/121288f735f8443ebb69386de1019cbf~tplv-k3u1fbpfcp-watermark.image?" alt="77972f24d69243bb93679f155f305095_tplv-k3u1fbpfcp-zoom-in-crop-mark_3024_0_0_0.awebp"></p><h3 id="_2、css面试题" tabindex="-1"><a class="header-anchor" href="#_2、css面试题" aria-hidden="true">#</a> 2、CSS面试题</h3><h4 id="_2-1-盒模型介绍" tabindex="-1"><a class="header-anchor" href="#_2-1-盒模型介绍" aria-hidden="true">#</a> 2.1 盒模型介绍</h4><p>CSS3 中的盒模型有以下两种：<strong>标准盒模型</strong>、<strong>IE（替代）盒模型</strong>。</p><p>两种盒子模型都是由 <code>content + padding + border + margin</code> 构成，其大小都是由 <code>content + padding + border</code> 决定的，但是盒子内容宽/高度（即 <code>width/height</code>）的计算范围根据盒模型的不同会有所不同：</p><ul><li>标准盒模型：只包含 <code>content</code> 。</li><li>IE（替代）盒模型：<code>content + padding + border</code> 。</li></ul><p>可以通过 <code>box-sizing</code> 来改变元素的盒模型：</p><ul><li><code>box-sizing: content-box</code> ：标准盒模型（默认值）。</li><li><code>box-sizing: border-box</code> ：IE（替代）盒模型/怪异盒模型。</li></ul><h4 id="_2-2-对-bfc-的理解" tabindex="-1"><a class="header-anchor" href="#_2-2-对-bfc-的理解" aria-hidden="true">#</a> 2.2 对 BFC 的理解</h4><p>BFC即块级格式上下文,根据盒模型可知,每个元素都被定义为一个矩形盒子,然后盒子的布局会受到 <strong>尺寸</strong>,<strong>定位</strong>,<strong>盒子的子元素或兄弟元素</strong>,视口尺寸等因素影响,所以浏览器会有一个计算的过程,计算的规则由一个<strong>视觉格式化模型</strong>的东西定义的,BFC就是来自这个概念,它是css视觉渲染的一部分,用于决定块级盒的布局及浮动相互影响范围的一个区域. 同理:IFC为行内格式上下文 BFC由一些特性:</p><ol><li>块级元素会在垂直方向一个接一个排列,和文档流的排列方式一致</li><li>在BFC中上下相邻的两个容器的 <code>margin</code> 会重叠,创建新的BFC可以避免外边距重叠</li><li>计算BFC的高度时,需要计算浮动元素的高度</li><li>BFC区域不会与浮动元素发生重叠</li><li>BFC 是独立的容器，容器内部元素不会影响外部元素。</li><li>每个元素的左 <code>margin</code>  值和容器的左 <code>border</code>  相接触。</li></ol><p>利用这些特性，我们可以解决以下问题：</p><ul><li>利用 <code>4</code>  和 <code>6</code> ，我们可以实现三栏（或两栏）自适应布局。</li><li>利用 <code>2</code> ，我们可以避免 <code>margin</code>  重叠问题。</li><li>利用 <code>3</code> ，我们可以避免高度塌陷。</li></ul><p>创建 BFC 的方式：</p><p>以下元素会创建 <code>BFC</code>：</p><ul><li>根元素（<code>&lt;html&gt;</code>）</li><li>浮动元素（<code>float</code> 不为 <code>none</code>）</li><li>绝对定位元素（<code>position</code> 为 <code>absolute</code> 或 <code>fixed</code>）</li><li>表格的标题和单元格（<code>display</code> 为 <code>table-caption</code>，<code>table-cell</code>）</li><li>匿名表格单元格元素（<code>display</code> 为 <code>table</code> 或 <code>inline-table</code>）</li><li>行内块元素（<code>display</code> 为 <code>inline-block</code>）</li><li><code>overflow</code> 的值不为 <code>visible</code> 的元素</li><li>弹性元素（<code>display</code> 为 <code>flex</code> 或 <code>inline-flex</code> 的元素的直接子元素）</li><li>网格元素（<code>display</code> 为 <code>grid</code> 或 <code>inline-grid</code> 的元素的直接子元素）</li></ul><p>以上是 <code>CSS2.1</code> 规范定义的 <code>BFC</code> 触发方式，在最新的 <code>CSS3</code> 规范中，弹性元素和网格元素会创建 <code>F(Flex)FC</code> 和 <code>G(Grid)FC</code>。 ###　BFC的范围　 直译过来就是，<code>BFC</code> 包含创建它的元素的所有子元素，但是不包括创建了新的 <code>BFC</code> 的子元素的内部元素。</p><p>简单来说，子元素如果又创建了一个新的 <code>BFC</code>，那么它里面的内容就不属于上一个 <code>BFC</code> 了，这体现了 <code>BFC</code> <strong>隔离</strong> 的思想，</p><h4 id="_2-3-flex-布局" tabindex="-1"><a class="header-anchor" href="#_2-3-flex-布局" aria-hidden="true">#</a> 2.3 Flex 布局</h4>',30);function j(q,y){const l=c("ExternalLinkIcon");return n(),t("div",null,[s,h,e("blockquote",null,[e("p",null,[o("这是我的 "),e("a",p,[o("github/blog"),d(l)]),o("，有帮助的话点个 star🌟 噢～谢啦～")])]),e("p",null,[o("参考以下几个文章："),_,e("a",u,[o("做了一份前端面试复习计划，保熟～"),d(l)]),b,e("a",f,[o("最近两周出去面试遇到的面试题（前端初级、长更）"),d(l)])]),g,m,F,e("p",null,[o("推荐阅读："),C,e("a",x,[o("如何写「前端简历」，能敲开字节跳动的大门？"),d(l)]),k,e("a",w,[o("一份优秀的前端开发工程师简历是怎么样的？"),d(l)])]),e("p",null,[o("这里是简历模板中Markdown的代码："),e("a",B,[o("https://github.com/youngyangyang04/Markdown-Resume-Template (opens new window)"),d(l)]),o("，可以fork到自己Github仓库上，按照这个模板来修改自己的简历。")]),S])}const T=i(a,[["render",j],["__file","前端面试复习计划.html.vue"]]);export{T as default};
